$ longitudinal_snapshot/LT.py --help
usage: LT.py [-h] [--verbose] [--reftime seconds] [--max_size pos_int]
             [--max_name_len pos_int] [--notes text] [--replace]
             [--gufi_query path] [--threads count]
             index outname

GUFI Longitudinal Snapshot Generator

positional arguments:
  index                 index to snapshot
  outname               output db file name

options:
  -h, --help            show this help message and exit
  --verbose, -V         Show the gufi_query being executed
  --reftime seconds     reference point for age (since UNIX epoch)
  --max_size pos_int    the maximum expected size
  --max_name_len pos_int
                        the maximum expected length of a name/linkname
  --notes text          freeform text of any extra information to add to the
                        snapshot
  --replace             replace existing tables
  --gufi_query path     path to gufi_query executable
  --threads count, -n count
                        thread count

$ longitudinal_snapshot/LT.py "prefix" "longitudinal_snapshot_LT.db" --gufi_query="gufi_query" --verbose --notes 'test notes'
GUFI query is
   gufi_query prefix \
    -n 1 \
    -x \
    -O longitudinal_snapshot_LT.db \
    -I 'CREATE  TABLE intermediate_treesummary (depth INT64, totsubdirs INT64, maxsubdirfiles INT64, maxsubdirlinks INT64, maxsubdirsize INT64, totfiles INT64, totlinks INT64, minuid INT64, maxuid INT64, mingid INT64, maxgid INT64, minsize INT64, maxsize INT64, totzero INT64, totltk INT64, totmtk INT64, totltm INT64, totmtm INT64, totmtg INT64, totmtt INT64, totsize INT64, minctime INT64, maxctime INT64, minmtime INT64, maxmtime INT64, minatime INT64, maxatime INT64, minblocks INT64, maxblocks INT64, totxattr INT64, mincrtime INT64, maxcrtime INT64, minossint1 INT64, maxossint1 INT64, totossint1 INT64, minossint2 INT64, maxossint2 INT64, totossint2 INT64, minossint3 INT64, maxossint3 INT64, totossint3 INT64, minossint4 INT64, maxossint4 INT64, totossint4 INT64); CREATE  TABLE intermediate_summary (depth INT64, totfiles INT64, totlinks INT64, totsubdirs INT64, minuid INT64, maxuid INT64, mingid INT64, maxgid INT64, minsize INT64, maxsize INT64, totsize INT64, minossint1 INT64, maxossint1 INT64, totossint1 INT64, minossint2 INT64, maxossint2 INT64, totossint2 INT64, minossint3 INT64, maxossint3 INT64, totossint3 INT64, minossint4 INT64, maxossint4 INT64, totossint4 INT64); CREATE  TABLE intermediate_entries (depth INT64, name_len INT64, mode INT64, nlink INT64, uid INT64, gid INT64, size INT64, blksize INT64, blocks INT64, atime INT64, mtime INT64, ctime INT64, linkname_len INT64, crtime INT64, ossint1 INT64, ossint2 INT64, ossint3 INT64, ossint4 INT64, osstext1_len INT64, osstext2_len INT64, extension TEXT);' \
    -T 'INSERT INTO intermediate_treesummary SELECT level(), totsubdirs, maxsubdirfiles, maxsubdirlinks, maxsubdirsize, totfiles, totlinks, minuid, maxuid, mingid, maxgid, minsize, maxsize, totzero, totltk, totmtk, totltm, totmtm, totmtg, totmtt, totsize, minctime, maxctime, minmtime, maxmtime, minatime, maxatime, minblocks, maxblocks, totxattr, mincrtime, maxcrtime, minossint1, maxossint1, totossint1, minossint2, maxossint2, totossint2, minossint3, maxossint3, totossint3, minossint4, maxossint4, totossint4 FROM treesummary; SELECT 1' \
    -S 'INSERT INTO intermediate_summary SELECT level(), totfiles, totlinks, subdirs(srollsubdirs, sroll), minuid, maxuid, mingid, maxgid, minsize, maxsize, totsize, minossint1, maxossint1, totossint1, minossint2, maxossint2, totossint2, minossint3, maxossint3, totossint3, minossint4, maxossint4, totossint4 FROM vrxsummary GROUP BY inode; SELECT 1' \
    -E 'INSERT INTO intermediate_entries SELECT level(), LENGTH(name), mode, nlink, uid, gid,
                              CASE WHEN type == '"'"'f'"'"' THEN
                                  size
                              ELSE
                                  NULL
                              END, blksize, blocks, atime, mtime, ctime,
                              CASE WHEN type == '"'"'l'"'"' THEN
                                  LENGTH(linkname)
                              ELSE
                                  NULL
                              END
                              , crtime, ossint1, ossint2, ossint3, ossint4, LENGTH(osstext1), LENGTH(osstext2),
                              CASE WHEN name NOT LIKE '"'"'%.%'"'"' THEN
                                  NULL
                              ELSE
                                  REPLACE(name, RTRIM(name, REPLACE(name, '"'"'.'"'"', '"'"''"'"')), '"'"''"'"')
                              END
                               FROM vrxpentries GROUP BY inode' \
    -K 'CREATE TEMP TABLE J_treesummary (depth INT64, totsubdirs INT64, maxsubdirfiles INT64, maxsubdirlinks INT64, maxsubdirsize INT64, totfiles INT64, totlinks INT64, minuid INT64, maxuid INT64, mingid INT64, maxgid INT64, minsize INT64, maxsize INT64, totzero INT64, totltk INT64, totmtk INT64, totltm INT64, totmtm INT64, totmtg INT64, totmtt INT64, totsize INT64, minctime INT64, maxctime INT64, minmtime INT64, maxmtime INT64, minatime INT64, maxatime INT64, minblocks INT64, maxblocks INT64, totxattr INT64, mincrtime INT64, maxcrtime INT64, minossint1 INT64, maxossint1 INT64, totossint1 INT64, minossint2 INT64, maxossint2 INT64, totossint2 INT64, minossint3 INT64, maxossint3 INT64, totossint3 INT64, minossint4 INT64, maxossint4 INT64, totossint4 INT64); CREATE  TABLE treesummary (depth INT64, totsubdirs INT64, maxsubdirfiles INT64, maxsubdirlinks INT64, maxsubdirsize INT64, totfiles INT64, totlinks INT64, minuid INT64, maxuid INT64, mingid INT64, maxgid INT64, minsize INT64, maxsize INT64, totzero INT64, totltk INT64, totmtk INT64, totltm INT64, totmtm INT64, totmtg INT64, totmtt INT64, totsize INT64, minctime INT64, maxctime INT64, minmtime INT64, maxmtime INT64, minatime INT64, maxatime INT64, minblocks INT64, maxblocks INT64, totxattr INT64, mincrtime INT64, maxcrtime INT64, minossint1 INT64, maxossint1 INT64, totossint1 INT64, minossint2 INT64, maxossint2 INT64, totossint2 INT64, minossint3 INT64, maxossint3 INT64, totossint3 INT64, minossint4 INT64, maxossint4 INT64, totossint4 INT64); CREATE TEMP TABLE J_summary (depth INT64, totfiles INT64, totlinks INT64, totsubdirs INT64, minuid INT64, maxuid INT64, mingid INT64, maxgid INT64, minsize INT64, maxsize INT64, totsize INT64, minossint1 INT64, maxossint1 INT64, totossint1 INT64, minossint2 INT64, maxossint2 INT64, totossint2 INT64, minossint3 INT64, maxossint3 INT64, totossint3 INT64, minossint4 INT64, maxossint4 INT64, totossint4 INT64); CREATE  TABLE summary (depth INT64, totfiles INT64, totlinks INT64, totsubdirs INT64, minuid INT64, maxuid INT64, mingid INT64, maxgid INT64, minsize INT64, maxsize INT64, totsize INT64, minossint1 INT64, maxossint1 INT64, totossint1 INT64, minossint2 INT64, maxossint2 INT64, totossint2 INT64, minossint3 INT64, maxossint3 INT64, totossint3 INT64, minossint4 INT64, maxossint4 INT64, totossint4 INT64); CREATE TEMP TABLE J_entries (depth INT64, name_len INT64, mode INT64, nlink INT64, uid INT64, gid INT64, size INT64, blksize INT64, blocks INT64, atime INT64, mtime INT64, ctime INT64, linkname_len INT64, crtime INT64, ossint1 INT64, ossint2 INT64, ossint3 INT64, ossint4 INT64, osstext1_len INT64, osstext2_len INT64, extension TEXT); CREATE  TABLE entries (depth INT64, uid_hist TEXT, gid_hist TEXT, size_mean DOUBLE, size_median DOUBLE, size_mode TEXT, size_stdev DOUBLE, size_hist TEXT, permissions_hist TEXT, ctime_mean DOUBLE, ctime_median DOUBLE, ctime_mode TEXT, ctime_stdev DOUBLE, ctime_age_hist TEXT, ctime_hour_hist TEXT, atime_mean DOUBLE, atime_median DOUBLE, atime_mode TEXT, atime_stdev DOUBLE, atime_age_hist TEXT, atime_hour_hist TEXT, mtime_mean DOUBLE, mtime_median DOUBLE, mtime_mode TEXT, mtime_stdev DOUBLE, mtime_age_hist TEXT, mtime_hour_hist TEXT, crtime_mean DOUBLE, crtime_median DOUBLE, crtime_mode TEXT, crtime_stdev DOUBLE, crtime_age_hist TEXT, crtime_hour_hist TEXT, ftime_min INT64, ftime_max INT64, ftime_mean DOUBLE, ftime_median DOUBLE, ftime_mode TEXT, ftime_stdev DOUBLE, name_len_min INT64, name_len_max INT64, name_len_mean DOUBLE, name_len_median DOUBLE, name_len_mode TEXT, name_len_stdev DOUBLE, name_len_hist TEXT, linkname_len_min INT64, linkname_len_max INT64, linkname_len_mean DOUBLE, linkname_len_median DOUBLE, linkname_len_mode TEXT, linkname_len_stdev DOUBLE, linkname_len_hist TEXT, extensions_hist TEXT, extensions_len_min INT64, extensions_len_max INT64, extensions_len_mean DOUBLE, extensions_len_median DOUBLE, extensions_len_mode TEXT, extensions_len_stdev DOUBLE, extensions_len_hist TEXT);' \
    -J 'INSERT INTO J_treesummary SELECT depth, TOTAL(totsubdirs), MAX(maxsubdirfiles), MAX(maxsubdirlinks), MAX(maxsubdirsize), TOTAL(totfiles), TOTAL(totlinks), MIN(minuid), MAX(maxuid), MIN(mingid), MAX(maxgid), MIN(minsize), MAX(maxsize), TOTAL(totzero), TOTAL(totltk), TOTAL(totmtk), TOTAL(totltm), TOTAL(totmtm), TOTAL(totmtg), TOTAL(totmtt), TOTAL(totsize), MIN(minctime), MAX(maxctime), MIN(minmtime), MAX(maxmtime), MIN(minatime), MAX(maxatime), MIN(minblocks), MAX(maxblocks), TOTAL(totxattr), MIN(mincrtime), MAX(maxcrtime), MIN(minossint1), MAX(maxossint1), TOTAL(totossint1), MIN(minossint2), MAX(maxossint2), TOTAL(totossint2), MIN(minossint3), MAX(maxossint3), TOTAL(totossint3), MIN(minossint4), MAX(maxossint4), TOTAL(totossint4) FROM intermediate_treesummary GROUP BY depth; INSERT INTO J_summary SELECT depth, TOTAL(totfiles), TOTAL(totlinks), TOTAL(totsubdirs), MIN(minuid), MAX(maxuid), MIN(mingid), MAX(maxgid), MIN(minsize), MAX(maxsize), TOTAL(totsize), MIN(minossint1), MAX(maxossint1), TOTAL(totossint1), MIN(minossint2), MAX(maxossint2), TOTAL(totossint2), MIN(minossint3), MAX(maxossint3), TOTAL(totossint3), MIN(minossint4), MAX(maxossint4), TOTAL(totossint4) FROM intermediate_summary GROUP BY depth;; INSERT INTO J_entries SELECT * FROM intermediate_entries;' \
    -G \
    '
        INSERT INTO treesummary SELECT depth, TOTAL(totsubdirs), MAX(maxsubdirfiles), MAX(maxsubdirlinks), MAX(maxsubdirsize), TOTAL(totfiles), TOTAL(totlinks), MIN(minuid), MAX(maxuid), MIN(mingid), MAX(maxgid), MIN(minsize), MAX(maxsize), TOTAL(totzero), TOTAL(totltk), TOTAL(totmtk), TOTAL(totltm), TOTAL(totmtm), TOTAL(totmtg), TOTAL(totmtt), TOTAL(totsize), MIN(minctime), MAX(maxctime), MIN(minmtime), MAX(maxmtime), MIN(minatime), MAX(maxatime), MIN(minblocks), MAX(maxblocks), TOTAL(totxattr), MIN(mincrtime), MAX(maxcrtime), MIN(minossint1), MAX(maxossint1), TOTAL(totossint1), MIN(minossint2), MAX(maxossint2), TOTAL(totossint2), MIN(minossint3), MAX(maxossint3), TOTAL(totossint3), MIN(minossint4), MAX(maxossint4), TOTAL(totossint4) FROM J_treesummary GROUP BY depth; DROP TABLE J_treesummary;
        INSERT INTO summary SELECT depth, TOTAL(totfiles), TOTAL(totlinks), TOTAL(totsubdirs), MIN(minuid), MAX(maxuid), MIN(mingid), MAX(maxgid), MIN(minsize), MAX(maxsize), TOTAL(totsize), MIN(minossint1), MAX(maxossint1), TOTAL(totossint1), MIN(minossint2), MAX(maxossint2), TOTAL(totossint2), MIN(minossint3), MAX(maxossint3), TOTAL(totossint3), MIN(minossint4), MAX(maxossint4), TOTAL(totossint4) FROM J_summary GROUP BY depth; DROP TABLE J_summary;
        INSERT INTO entries SELECT depth, category_hist(CAST(uid AS TEXT), 1), category_hist(CAST(gid AS TEXT), 1), AVG(size), median(size), mode_count(CAST(size AS TEXT)), stdevp(size), log2_hist(size, 50), mode_hist(mode), AVG(ctime), median(ctime), mode_count(ctime), stdevp(ctime), time_hist(ctime), now, category_hist(CAST(strftime('"'"'%H'"'"', ctime) AS TEXT), 1), AVG(atime), median(atime), mode_count(atime), stdevp(atime), time_hist(atime), now, category_hist(CAST(strftime('"'"'%H'"'"', atime) AS TEXT), 1), AVG(mtime), median(mtime), mode_count(mtime), stdevp(mtime), time_hist(mtime), now, category_hist(CAST(strftime('"'"'%H'"'"', mtime) AS TEXT), 1), AVG(crtime), median(crtime), mode_count(crtime), stdevp(crtime), time_hist(crtime), now, category_hist(CAST(strftime('"'"'%H'"'"', crtime) AS TEXT), 1), MIN(atime - mtime), MAX(atime - mtime), AVG(atime - mtime), median(atime - mtime), mode_count(atime - mtime), stdevp(atime - mtime), MIN(name_len), MAX(name_len), AVG(name_len), median(name_len), mode_count(name_len), stdevp(name_len), log2_hist(name_len, 8), MIN(linkname_len), MAX(linkname_len), AVG(linkname_len), median(linkname_len), mode_count(linkname_len), stdevp(linkname_len), log2_hist(linkname_len, 8), category_hist(extension, 1), MIN(LENGTH(extension)), MAX(LENGTH(extension)), AVG(LENGTH(extension)), median(LENGTH(extension)), mode_count(LENGTH(extension)), stdevp(LENGTH(extension)), log2_hist(LENGTH(extension), 8) FROM J_entries GROUP BY depth; DROP TABLE J_entries;
        CREATE VIEW snapshot
        AS
          SELECT *
          FROM   summary
                 LEFT JOIN entries
                        ON summary.depth == entries.depth
                 LEFT JOIN (SELECT depth AS ts_depth, totsubdirs AS ts_totsubdirs, maxsubdirfiles AS ts_maxsubdirfiles, maxsubdirlinks AS ts_maxsubdirlinks, maxsubdirsize AS ts_maxsubdirsize, totfiles AS ts_totfiles, totlinks AS ts_totlinks, minuid AS ts_minuid, maxuid AS ts_maxuid, mingid AS ts_mingid, maxgid AS ts_maxgid, minsize AS ts_minsize, maxsize AS ts_maxsize, totzero AS ts_totzero, totltk AS ts_totltk, totmtk AS ts_totmtk, totltm AS ts_totltm, totmtm AS ts_totmtm, totmtg AS ts_totmtg, totmtt AS ts_totmtt, totsize AS ts_totsize, minctime AS ts_minctime, maxctime AS ts_maxctime, minmtime AS ts_minmtime, maxmtime AS ts_maxmtime, minatime AS ts_minatime, maxatime AS ts_maxatime, minblocks AS ts_minblocks, maxblocks AS ts_maxblocks, totxattr AS ts_totxattr, mincrtime AS ts_mincrtime, maxcrtime AS ts_maxcrtime, minossint1 AS ts_minossint1, maxossint1 AS ts_maxossint1, totossint1 AS ts_totossint1, minossint2 AS ts_minossint2, maxossint2 AS ts_maxossint2, totossint2 AS ts_totossint2, minossint3 AS ts_minossint3, maxossint3 AS ts_maxossint3, totossint3 AS ts_totossint3, minossint4 AS ts_minossint4, maxossint4 AS ts_maxossint4, totossint4 AS ts_totossint4 FROM treesummary) AS ts
                        ON summary.depth == ts.ts_depth;
        '

# running a second time on the same target will error because the tables already exist
$ longitudinal_snapshot/LT.py "prefix" "longitudinal_snapshot_LT.db" --gufi_query="gufi_query" --notes 'test notes'
Could not create aggregation table "CREATE TEMP TABLE J_treesummary (depth INT64, totsubdirs INT64, maxsubdirfiles INT64, maxsubdirlinks INT64, maxsubdirsize INT64, totfiles INT64, totlinks INT64, minuid INT64, maxuid INT64, mingid INT64, maxgid INT64, minsize INT64, maxsize INT64, totzero INT64, totltk INT64, totmtk INT64, totltm INT64, totmtm INT64, totmtg INT64, totmtt INT64, totsize INT64, minctime INT64, maxctime INT64, minmtime INT64, maxmtime INT64, minatime INT64, maxatime INT64, minblocks INT64, maxblocks INT64, totxattr INT64, mincrtime INT64, maxcrtime INT64, minossint1 INT64, maxossint1 INT64, totossint1 INT64, minossint2 INT64, maxossint2 INT64, totossint2 INT64, minossint3 INT64, maxossint3 INT64, totossint3 INT64, minossint4 INT64, maxossint4 INT64, totossint4 INT64); CREATE  TABLE treesummary (depth INT64, totsubdirs INT64, maxsubdirfiles INT64, maxsubdirlinks INT64, maxsubdirsize INT64, totfiles INT64, totlinks INT64, minuid INT64, maxuid INT64, mingid INT64, maxgid INT64, minsize INT64, maxsize INT64, totzero INT64, totltk INT64, totmtk INT64, totltm INT64, totmtm INT64, totmtg INT64, totmtt INT64, totsize INT64, minctime INT64, maxctime INT64, minmtime INT64, maxmtime INT64, minatime INT64, maxatime INT64, minblocks INT64, maxblocks INT64, totxattr INT64, mincrtime INT64, maxcrtime INT64, minossint1 INT64, maxossint1 INT64, totossint1 INT64, minossint2 INT64, maxossint2 INT64, totossint2 INT64, minossint3 INT64, maxossint3 INT64, totossint3 INT64, minossint4 INT64, maxossint4 INT64, totossint4 INT64); CREATE TEMP TABLE J_summary (depth INT64, totfiles INT64, totlinks INT64, totsubdirs INT64, minuid INT64, maxuid INT64, mingid INT64, maxgid INT64, minsize INT64, maxsize INT64, totsize INT64, minossint1 INT64, maxossint1 INT64, totossint1 INT64, minossint2 INT64, maxossint2 INT64, totossint2 INT64, minossint3 INT64, maxossint3 INT64, totossint3 INT64, minossint4 INT64, maxossint4 INT64, totossint4 INT64); CREATE  TABLE summary (depth INT64, totfiles INT64, totlinks INT64, totsubdirs INT64, minuid INT64, maxuid INT64, mingid INT64, maxgid INT64, minsize INT64, maxsize INT64, totsize INT64, minossint1 INT64, maxossint1 INT64, totossint1 INT64, minossint2 INT64, maxossint2 INT64, totossint2 INT64, minossint3 INT64, maxossint3 INT64, totossint3 INT64, minossint4 INT64, maxossint4 INT64, totossint4 INT64); CREATE TEMP TABLE J_entries (depth INT64, name_len INT64, mode INT64, nlink INT64, uid INT64, gid INT64, size INT64, blksize INT64, blocks INT64, atime INT64, mtime INT64, ctime INT64, linkname_len INT64, crtime INT64, ossint1 INT64, ossint2 INT64, ossint3 INT64, ossint4 INT64, osstext1_len INT64, osstext2_len INT64, extension TEXT); CREATE  TABLE entries (depth INT64, uid_hist TEXT, gid_hist TEXT, size_mean DOUBLE, size_median DOUBLE, size_mode TEXT, size_stdev DOUBLE, size_hist TEXT, permissions_hist TEXT, ctime_mean DOUBLE, ctime_median DOUBLE, ctime_mode TEXT, ctime_stdev DOUBLE, ctime_age_hist TEXT, ctime_hour_hist TEXT, atime_mean DOUBLE, atime_median DOUBLE, atime_mode TEXT, atime_stdev DOUBLE, atime_age_hist TEXT, atime_hour_hist TEXT, mtime_mean DOUBLE, mtime_median DOUBLE, mtime_mode TEXT, mtime_stdev DOUBLE, mtime_age_hist TEXT, mtime_hour_hist TEXT, crtime_mean DOUBLE, crtime_median DOUBLE, crtime_mode TEXT, crtime_stdev DOUBLE, crtime_age_hist TEXT, crtime_hour_hist TEXT, ftime_min INT64, ftime_max INT64, ftime_mean DOUBLE, ftime_median DOUBLE, ftime_mode TEXT, ftime_stdev DOUBLE, name_len_min INT64, name_len_max INT64, name_len_mean DOUBLE, name_len_median DOUBLE, name_len_mode TEXT, name_len_stdev DOUBLE, name_len_hist TEXT, linkname_len_min INT64, linkname_len_max INT64, linkname_len_mean DOUBLE, linkname_len_median DOUBLE, linkname_len_mode TEXT, linkname_len_stdev DOUBLE, linkname_len_hist TEXT, extensions_hist TEXT, extensions_len_min INT64, extensions_len_max INT64, extensions_len_mean DOUBLE, extensions_len_median DOUBLE, extensions_len_mode TEXT, extensions_len_stdev DOUBLE, extensions_len_hist TEXT);" on longitudinal_snapshot_LT.db: table treesummary already exists

# use --replace to replace existing data
$ longitudinal_snapshot/LT.py "prefix" "longitudinal_snapshot_LT.db" --gufi_query="gufi_query" --notes 'test notes' --replace

$ sqlite3 "longitudinal_snapshot_LT.db" ".tables"
entries      metadata     snapshot     summary      treesummary

$ sqlite3 "longitudinal_snapshot_LT.db" "PRAGMA TABLE_INFO(metadata);"
0|timestamp|INT|0||0
1|src|TEXT|0||0
2|notes|TEXT|0||0

$ sqlite3 "longitudinal_snapshot_LT.db" "PRAGMA TABLE_INFO(entries);"
0|depth|INT64|0||0
1|uid_hist|TEXT|0||0
2|gid_hist|TEXT|0||0
3|size_mean|DOUBLE|0||0
4|size_median|DOUBLE|0||0
5|size_mode|TEXT|0||0
6|size_stdev|DOUBLE|0||0
7|size_hist|TEXT|0||0
8|permissions_hist|TEXT|0||0
9|ctime_mean|DOUBLE|0||0
10|ctime_median|DOUBLE|0||0
11|ctime_mode|TEXT|0||0
12|ctime_stdev|DOUBLE|0||0
13|ctime_age_hist|TEXT|0||0
14|ctime_hour_hist|TEXT|0||0
15|atime_mean|DOUBLE|0||0
16|atime_median|DOUBLE|0||0
17|atime_mode|TEXT|0||0
18|atime_stdev|DOUBLE|0||0
19|atime_age_hist|TEXT|0||0
20|atime_hour_hist|TEXT|0||0
21|mtime_mean|DOUBLE|0||0
22|mtime_median|DOUBLE|0||0
23|mtime_mode|TEXT|0||0
24|mtime_stdev|DOUBLE|0||0
25|mtime_age_hist|TEXT|0||0
26|mtime_hour_hist|TEXT|0||0
27|crtime_mean|DOUBLE|0||0
28|crtime_median|DOUBLE|0||0
29|crtime_mode|TEXT|0||0
30|crtime_stdev|DOUBLE|0||0
31|crtime_age_hist|TEXT|0||0
32|crtime_hour_hist|TEXT|0||0
33|ftime_min|INT64|0||0
34|ftime_max|INT64|0||0
35|ftime_mean|DOUBLE|0||0
36|ftime_median|DOUBLE|0||0
37|ftime_mode|TEXT|0||0
38|ftime_stdev|DOUBLE|0||0
39|name_len_min|INT64|0||0
40|name_len_max|INT64|0||0
41|name_len_mean|DOUBLE|0||0
42|name_len_median|DOUBLE|0||0
43|name_len_mode|TEXT|0||0
44|name_len_stdev|DOUBLE|0||0
45|name_len_hist|TEXT|0||0
46|linkname_len_min|INT64|0||0
47|linkname_len_max|INT64|0||0
48|linkname_len_mean|DOUBLE|0||0
49|linkname_len_median|DOUBLE|0||0
50|linkname_len_mode|TEXT|0||0
51|linkname_len_stdev|DOUBLE|0||0
52|linkname_len_hist|TEXT|0||0
53|extensions_hist|TEXT|0||0
54|extensions_len_min|INT64|0||0
55|extensions_len_max|INT64|0||0
56|extensions_len_mean|DOUBLE|0||0
57|extensions_len_median|DOUBLE|0||0
58|extensions_len_mode|TEXT|0||0
59|extensions_len_stdev|DOUBLE|0||0
60|extensions_len_hist|TEXT|0||0

$ sqlite3 "longitudinal_snapshot_LT.db" "PRAGMA TABLE_INFO(summary);"
0|depth|INT64|0||0
1|totfiles|INT64|0||0
2|totlinks|INT64|0||0
3|totsubdirs|INT64|0||0
4|minuid|INT64|0||0
5|maxuid|INT64|0||0
6|mingid|INT64|0||0
7|maxgid|INT64|0||0
8|minsize|INT64|0||0
9|maxsize|INT64|0||0
10|totsize|INT64|0||0
11|minossint1|INT64|0||0
12|maxossint1|INT64|0||0
13|totossint1|INT64|0||0
14|minossint2|INT64|0||0
15|maxossint2|INT64|0||0
16|totossint2|INT64|0||0
17|minossint3|INT64|0||0
18|maxossint3|INT64|0||0
19|totossint3|INT64|0||0
20|minossint4|INT64|0||0
21|maxossint4|INT64|0||0
22|totossint4|INT64|0||0

$ sqlite3 "longitudinal_snapshot_LT.db" "PRAGMA TABLE_INFO(treesummary);"
0|depth|INT64|0||0
1|totsubdirs|INT64|0||0
2|maxsubdirfiles|INT64|0||0
3|maxsubdirlinks|INT64|0||0
4|maxsubdirsize|INT64|0||0
5|totfiles|INT64|0||0
6|totlinks|INT64|0||0
7|minuid|INT64|0||0
8|maxuid|INT64|0||0
9|mingid|INT64|0||0
10|maxgid|INT64|0||0
11|minsize|INT64|0||0
12|maxsize|INT64|0||0
13|totzero|INT64|0||0
14|totltk|INT64|0||0
15|totmtk|INT64|0||0
16|totltm|INT64|0||0
17|totmtm|INT64|0||0
18|totmtg|INT64|0||0
19|totmtt|INT64|0||0
20|totsize|INT64|0||0
21|minctime|INT64|0||0
22|maxctime|INT64|0||0
23|minmtime|INT64|0||0
24|maxmtime|INT64|0||0
25|minatime|INT64|0||0
26|maxatime|INT64|0||0
27|minblocks|INT64|0||0
28|maxblocks|INT64|0||0
29|totxattr|INT64|0||0
30|mincrtime|INT64|0||0
31|maxcrtime|INT64|0||0
32|minossint1|INT64|0||0
33|maxossint1|INT64|0||0
34|totossint1|INT64|0||0
35|minossint2|INT64|0||0
36|maxossint2|INT64|0||0
37|totossint2|INT64|0||0
38|minossint3|INT64|0||0
39|maxossint3|INT64|0||0
40|totossint3|INT64|0||0
41|minossint4|INT64|0||0
42|maxossint4|INT64|0||0
43|totossint4|INT64|0||0

$ sqlite3 "longitudinal_snapshot_LT.db" "PRAGMA TABLE_INFO(snapshot);"
0|depth|INT64|0||0
1|totfiles|INT64|0||0
2|totlinks|INT64|0||0
3|totsubdirs|INT64|0||0
4|minuid|INT64|0||0
5|maxuid|INT64|0||0
6|mingid|INT64|0||0
7|maxgid|INT64|0||0
8|minsize|INT64|0||0
9|maxsize|INT64|0||0
10|totsize|INT64|0||0
11|minossint1|INT64|0||0
12|maxossint1|INT64|0||0
13|totossint1|INT64|0||0
14|minossint2|INT64|0||0
15|maxossint2|INT64|0||0
16|totossint2|INT64|0||0
17|minossint3|INT64|0||0
18|maxossint3|INT64|0||0
19|totossint3|INT64|0||0
20|minossint4|INT64|0||0
21|maxossint4|INT64|0||0
22|totossint4|INT64|0||0
23|depth:1|INT64|0||0
24|uid_hist|TEXT|0||0
25|gid_hist|TEXT|0||0
26|size_mean|DOUBLE|0||0
27|size_median|DOUBLE|0||0
28|size_mode|TEXT|0||0
29|size_stdev|DOUBLE|0||0
30|size_hist|TEXT|0||0
31|permissions_hist|TEXT|0||0
32|ctime_mean|DOUBLE|0||0
33|ctime_median|DOUBLE|0||0
34|ctime_mode|TEXT|0||0
35|ctime_stdev|DOUBLE|0||0
36|ctime_age_hist|TEXT|0||0
37|ctime_hour_hist|TEXT|0||0
38|atime_mean|DOUBLE|0||0
39|atime_median|DOUBLE|0||0
40|atime_mode|TEXT|0||0
41|atime_stdev|DOUBLE|0||0
42|atime_age_hist|TEXT|0||0
43|atime_hour_hist|TEXT|0||0
44|mtime_mean|DOUBLE|0||0
45|mtime_median|DOUBLE|0||0
46|mtime_mode|TEXT|0||0
47|mtime_stdev|DOUBLE|0||0
48|mtime_age_hist|TEXT|0||0
49|mtime_hour_hist|TEXT|0||0
50|crtime_mean|DOUBLE|0||0
51|crtime_median|DOUBLE|0||0
52|crtime_mode|TEXT|0||0
53|crtime_stdev|DOUBLE|0||0
54|crtime_age_hist|TEXT|0||0
55|crtime_hour_hist|TEXT|0||0
56|ftime_min|INT64|0||0
57|ftime_max|INT64|0||0
58|ftime_mean|DOUBLE|0||0
59|ftime_median|DOUBLE|0||0
60|ftime_mode|TEXT|0||0
61|ftime_stdev|DOUBLE|0||0
62|name_len_min|INT64|0||0
63|name_len_max|INT64|0||0
64|name_len_mean|DOUBLE|0||0
65|name_len_median|DOUBLE|0||0
66|name_len_mode|TEXT|0||0
67|name_len_stdev|DOUBLE|0||0
68|name_len_hist|TEXT|0||0
69|linkname_len_min|INT64|0||0
70|linkname_len_max|INT64|0||0
71|linkname_len_mean|DOUBLE|0||0
72|linkname_len_median|DOUBLE|0||0
73|linkname_len_mode|TEXT|0||0
74|linkname_len_stdev|DOUBLE|0||0
75|linkname_len_hist|TEXT|0||0
76|extensions_hist|TEXT|0||0
77|extensions_len_min|INT64|0||0
78|extensions_len_max|INT64|0||0
79|extensions_len_mean|DOUBLE|0||0
80|extensions_len_median|DOUBLE|0||0
81|extensions_len_mode|TEXT|0||0
82|extensions_len_stdev|DOUBLE|0||0
83|extensions_len_hist|TEXT|0||0
84|ts_depth|INT64|0||0
85|ts_totsubdirs|INT64|0||0
86|ts_maxsubdirfiles|INT64|0||0
87|ts_maxsubdirlinks|INT64|0||0
88|ts_maxsubdirsize|INT64|0||0
89|ts_totfiles|INT64|0||0
90|ts_totlinks|INT64|0||0
91|ts_minuid|INT64|0||0
92|ts_maxuid|INT64|0||0
93|ts_mingid|INT64|0||0
94|ts_maxgid|INT64|0||0
95|ts_minsize|INT64|0||0
96|ts_maxsize|INT64|0||0
97|ts_totzero|INT64|0||0
98|ts_totltk|INT64|0||0
99|ts_totmtk|INT64|0||0
100|ts_totltm|INT64|0||0
101|ts_totmtm|INT64|0||0
102|ts_totmtg|INT64|0||0
103|ts_totmtt|INT64|0||0
104|ts_totsize|INT64|0||0
105|ts_minctime|INT64|0||0
106|ts_maxctime|INT64|0||0
107|ts_minmtime|INT64|0||0
108|ts_maxmtime|INT64|0||0
109|ts_minatime|INT64|0||0
110|ts_maxatime|INT64|0||0
111|ts_minblocks|INT64|0||0
112|ts_maxblocks|INT64|0||0
113|ts_totxattr|INT64|0||0
114|ts_mincrtime|INT64|0||0
115|ts_maxcrtime|INT64|0||0
116|ts_minossint1|INT64|0||0
117|ts_maxossint1|INT64|0||0
118|ts_totossint1|INT64|0||0
119|ts_minossint2|INT64|0||0
120|ts_maxossint2|INT64|0||0
121|ts_totossint2|INT64|0||0
122|ts_minossint3|INT64|0||0
123|ts_maxossint3|INT64|0||0
124|ts_totossint3|INT64|0||0
125|ts_minossint4|INT64|0||0
126|ts_maxossint4|INT64|0||0
127|ts_totossint4|INT64|0||0

$ sqlite3 "longitudinal_snapshot_LT.db" "SELECT COUNT(*) FROM metadata;"
1

$ sqlite3 "longitudinal_snapshot_LT.db" "SELECT COUNT(*) FROM entries;"
3

$ sqlite3 "longitudinal_snapshot_LT.db" "SELECT COUNT(*) FROM summary;"
3

$ sqlite3 "longitudinal_snapshot_LT.db" "SELECT COUNT(*) FROM treesummary;"
3

$ sqlite3 "longitudinal_snapshot_LT.db" "SELECT COUNT(*) FROM snapshot;"
3

$ sqlite3 "longitudinal_snapshot_LT.db" "SELECT notes FROM metadata;"
test notes

$ sqlite3 "longitudinal_snapshot_LT.db" "SELECT depth, totfiles, totsize, ts_totsize, totlinks, ts_totlinks FROM snapshot;"
0|5|1049624|1049673|1|2
1|6|44|49|0|1
2|1|5|5|1|1

